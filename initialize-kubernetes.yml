---
- hosts: kube-cluster
  gather_facts: false
  become: yes

  vars:
    join_command_location: "{{ home_dir }}/git/vsphere-kubernetes/cluster_join.out"
    controller_join_command_location: "{{ home_dir }}/git/vsphere-kubernetes/controller_join.out"

  vars_files:
    - envanswer.yml

  tasks:

  - block:
      - name: Initialize Kubernetes cluster
        command: "kubeadm init --pod-network-cidr {{ pod_cidr }} --control-plane-endpoint \"{{ virtual_service }}:6443\" --upload-certs"
        register: kube_init

      - name: Create .kube directory
        file:
          path: "{{ home_dir }}/.kube"
          state: directory
          owner: 1000
          group: 1000

      - name: Configure .kube/config files
        copy:
          src: /etc/kubernetes/admin.conf
          dest: "{{ home_dir }}/.kube/config"
          remote_src: yes
          owner: 1000
          group: 1000

      - name: Extract the certificate-key token
        command: "kubeadm alpha certs certificate-key"
        register: certificate_token

      - pause:
          minutes: 2

      - name: Initialize the upload certs
        command: "kubeadm init phase upload-certs --upload-certs --certificate-key={{ certificate_token.stdout }}"
        register: upload_certs

      - name: Extract the controllers join command
        command: "kubeadm token create --print-join-command --certificate-key {{ certificate_token.stdout }}"
        register: controller_command

      - name: Extract the minions join command
        command: "kubeadm token create --print-join-command"
        register: join_command
      - name: Save kubeadm join command for minions
        local_action: copy content={{ join_command.stdout_lines | last | trim }} dest={{ join_command_location }}

      - name: Save kubeadm join command for controllers
        local_action: copy content={{ controller_command.stdout_lines | last | trim }} dest={{ controller_join_command_location }}

      - name: Copy minions join command to local file
        copy:
          src: "{{ join_command_location }}"
          dest: "{{ home_dir }}/"
          owner: 1000
          group: 1000
          mode: '0644'

      - name: Copy controllers join command to local file
        copy:
          src: "{{ controller_join_command_location }}"
          dest: "{{ home_dir }}"
          owner: 1000
          group: 1000
          mode: '0644'

    when: "'controller0' in inventory_hostname"

  # Allow all of the kube-system namespace containers to initialize
  - pause:
      minutes: 5

  - name: Read controller join command on controllers
    debug: msg={{ lookup('file', controller_join_command_location) }}
    register: controller_join_local
    when: "'controller1' in inventory_hostname"

  - name: Join 2nd controller to Kubernetes cluster
    command: "{{ controller_join_local.msg }}"
    when: "'controller1' in inventory_hostname"

  - name: Read controller join command on controllers
    debug: msg={{ lookup('file', controller_join_command_location) }}
    register: controller_join_local
    when: "'controller2' in inventory_hostname"

  - name: Join 3rd controller to Kubernetes cluster
    command: "{{ controller_join_local.msg }}"
    when: "'controller2' in inventory_hostname"
    
  - name: Read join command on minion nodes
    debug: msg={{ lookup('file', join_command_location) }}
    register: join_command_local
    when: "'node' in inventory_hostname"

  - name: Join minions to Kubernetes cluster
    command: "{{ join_command_local.msg }}"
    when: "'node' in inventory_hostname"
